@{
    ViewBag.Title = "工资单历史数据";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string divContent = controllerName + "_divContent";
    string tabEntityList = controllerName + "_tabEntityList_History";

}


<div class="easyui-layout" fit="true" border="false">
    <div>
        <div style="padding-bottom:15px; height:auto; background: #F4F4F4;">
            <form id="searchForm">
                <table>
                    <tr>
                        <th>部门：</th>
                        <td>
                            <input class="parm_control" type="text" id="departmentId" name="departmentId" />
                        </td>
                        <th>员工姓名：</th>
                        <td>
                            <input class="parm_control" type="text" id="employeeName" name="employeeName" />
                        </td>
                        <td>
                            <a data-options="iconCls:'icon-search'" style="margin-left:15px;padding-left:5px;padding-right:5px" class="easyui-linkbutton" href="javascript:filter();">查询</a>
                        </td>

                    </tr>
                    <tr>
                        <th>月份：</th>
                        <!--由于datebox框架上面的数据必须是时间格式的，所以我们用editable="false"来禁止用户手动输入，以免报错-->
                        <td>
                            <input class="parm_control"  name="month" id="month" />
                        </td>
                    </tr>
                </table>
            </form>
        </div>
        <table class="tab_center" id="@(tabEntityList)"></table>
    </div>
</div>

<div id="@(tabEntityList)Menu" class="easyui-menu" style="width: 50px; display: none;">
    <!--放置一个隐藏的菜单Div-->
    <div data-options="iconCls:'icon-save'" onclick="onSaveSingle()">保存</div>
    <div data-options="iconCls:'icon-cancel'" onclick="clearRow()">清空</div>
</div>

<div id="@(tabEntityList)ContextMenu" class="easyui-menu" style="height: 250px; display: none;">
    <!--放置一个隐藏的菜单Div-->
</div>

<script>
	$(function () {
	    initPage();

		//初始加载，表格宽度自适应
	    $(document).ready(function () {
		    onDatagridAdjust('@(tabEntityList)');
		});
	　　//浏览器窗口大小变化后，表格宽度自适应
	    $(window).resize(function () {
		    onDatagridAdjust('@(tabEntityList)');
		});
    })


    function initPage() {
        $('#departmentId').combobox({
            width: '100%',
            //editable: false,
            url: '/Department/GetAllEntities',
            mode: 'remote',
            valueField: 'id',
            textField: 'name',
        });

        $('#month').datebox({
            width: '100%',
            formatter: databoxFormatMonth,
            parser: databoxParser
        });
        $('#month').datebox('setValue', new Date);

        var url = '/@(controllerName)/GetEntities';
        var callbackFuns = [
            { "name": "onBeforeLoad", "fun": onBeforeLoad },
            { "name": "onBeforeEdit", "fun": onBeforeEdit },
            { "name": "onAfterEdit", "fun": refreshSalary },
            { "name": "onClickRow", "fun": onClickRow },
            { "name": "onDblClickRow", "fun": onDblClickRow },
            { "name": "onRowContextMenu", "fun": onDatagridRowContextMenu },
        ];
        toolbar = [
            { text: '锁定', iconCls: 'icon-lock', handler: onLock },
            { text: '全部锁定', iconCls: 'icon-lock', handler: onLockAll },
            { text: '解锁', iconCls: 'icon-unlock', handler: onUnlock },
            { text: '全部解锁', iconCls: 'icon-unlock', handler: onUnlockAll },
            '-',
            { text: '修改', iconCls: 'icon-edit', handler: onEditEntity },
            '-',
            { text: '导出全部', iconCls: 'icon-export', handler: onExportAll },
            { text: '导出工资条', iconCls: 'icon-export', handler: onExportBill },

        ];


        var gridObj = new SalaryRecordGrid('@(tabEntityList)', toolbar);

        initDatagrid(gridObj, url, callbackFuns);

    }


    function positiveStyler()
    {
        return 'background-color:yellow;';
    }
    function negativeStyler() {
        return 'background-color:lightpink;';
    }

	function refreshSalary(rowIndex, rowData, changes) {

	    var rows = $('#@(tabEntityList)').datagrid('getRows')[rowIndex];

	    rows.inputDate = formatDateTime(rows.inputDate);

	    var data = JSON.stringify(rows);
	    var param = {
	        "requestData": data
	    }

	    $.post('/@(controllerName)/RefreshSalary', param, function (result) {
	        if (result.status != 0) {
	            showAlert(result.content)
	        }
	        else {
	            console.log(result.data);

	            $('#@(tabEntityList)').datagrid('getRows')[rowIndex]['shouldTotal'] = result.data.shouldTotal;
	            $('#@(tabEntityList)').datagrid('getRows')[rowIndex]['actualTotal'] = result.data.actualTotal;

	            // row['shouldTotal'] = result.data.shouldTotal;
	            // row['actualTotal'] = result.data.actualTotal;

	            $('#@(tabEntityList)').datagrid('refreshRow', rowIndex);

	        }

	    }, "JSON").error(function (result) {
	    });


	}

    function getParamsJson() {
        var filterList = new Array;
        if ($('#departmentId').val().trim() != '') {
            var p = {
                "key": "departmentId",
                "action": "==",
                "value": $('#departmentId').val().trim()
            };
            filterList.push(p)
        }
        if ($('#employeeName').val().trim() != '') {
            var p = {
                "key": "employeeName",
                "action": "==",
                "value": $('#employeeName').val().trim()
            };
            filterList.push(p)
        }
        if ($('#month').val().trim() != '') {
            var p = {
                "key": "month",
                "action": "==",
                "value": $('#month').val().trim()
            };
            filterList.push(p)
        }

        return JSON.stringify(filterList);
    }


    function onBeforeLoad(param) {
        param.extendParams = getParamsJson();

        return true;
    }

	function onBeforeEdit() {
	    console.log("onBeforeEdit")
	    var row = $('#@(tabEntityList)').datagrid('getSelected');
	    if (null == row) {
	        return false;
	    }
	    if (row.status == "未审核") {
	        return true;
	    }

	    return false;
	}

    function filter() {
        var queryParams = $('#@(tabEntityList)').datagrid('options').queryParams;

        queryParams.extendParams = getParamsJson();

        $('#@(tabEntityList)').datagrid('options').queryParams = queryParams;
        $('#@(tabEntityList)').datagrid('load');
    }


    function onExportAll() {
        window.location.href = '/@(controllerName)/ExportAll?extendParams=' + getParamsJson();

    }
	function onExportBill() {
	    window.location.href = '/@(controllerName)/ExportBill?extendParams=' + getParamsJson();

	}

    function onEditEntity() {
        if (endEditing($('#@(tabEntityList)'))) {
            var updatedRows = $('#@(tabEntityList)').datagrid('getSelected');
            if (updatedRows.length == 0) {
                showAlert('无修改数据');
                return;
            }

            updatedRows.inputDate = formatDateTime(updatedRows.inputDate);

            var param = {
                "requestData": JSON.stringify(updatedRows)
            }

            $.post('/@(controllerName)/EditEntity', param, function (result) {
                if (result.status != 0) {
                    showAlert(result.content)
                }
                else {
                    showPrompt("保存成功");
                    $('#@(tabEntityList)').datagrid('reload');
                }

            }, "JSON").error(function (result) {
            });
        }
    }
    function onLock() {
        var rows = $('#@(tabEntityList)').datagrid('getSelected');
        if (rows.length == 0) {
            showAlert("未选择")
            return;
        }

        var param = {
            "status": "审核",
            "id": rows.id
        }
        console.log(param);
        $.post('/@(controllerName)/UpdateStatus', param, function (result) {
            if (result.status != 0) {
                showAlert(result.content)
            }
            else {
                showPrompt("锁定成功");
                $('#@(tabEntityList)').datagrid('reload');
            }

        }, "JSON").error(function (result) {
        });


    }
    function onLockAll() {
        var rows = $('#@(tabEntityList)').datagrid('getRows');

        if (rows.length == 0) {
            showAlert("未选择")
            return;
        }
        var idList = new Array();
        for (var i = 0; i < rows.length; i++) {
            idList.push(rows[i].id);
        }

        var param = {
            "status": "审核",
            "salaryRecord": JSON.stringify(idList)
        }

        $.post('/@(controllerName)/UpdateStatusBatch', param, function (result) {
            if (result.status != 0) {
                showAlert(result.content)
            }
            else {
                showPrompt("锁定成功");
                $('#@(tabEntityList)').datagrid('reload');
            }

        }, "JSON").error(function (result) {
        });
    }
    function onUnlock() {
        var rows = $('#@(tabEntityList)').datagrid('getSelected');

        if (rows.length == 0) {
            showAlert("未选择")
            return;
        }

        var param = {
            "status": "未审核",
            "id": rows.id
        }
        $.post('/@(controllerName)/UpdateStatus', param, function (result) {
            if (result.status != 0) {
                showAlert(result.content)
            }
            else {
                showPrompt("解锁成功");
                $('#@(tabEntityList)').datagrid('reload');
            }

        }, "JSON").error(function (result) {
        });
    }
    function onUnlockAll() {
        var rows = $('#@(tabEntityList)').datagrid('getRows');
        if (rows.length == 0) {
            showAlert("未选择")
            return;
        }
        var idList = new Array();
        for (var i = 0; i < rows.length; i++) {
            idList.push(rows[i].id);
        }

        var param = {
            "status": "未审核",
            "salaryRecord": JSON.stringify(idList)
        }

        $.post('/@(controllerName)/UpdateStatusBatch', param, function (result) {
            if (result.status != 0) {
                showAlert(result.content)
            }
            else {
                showPrompt("解锁成功");
                $('#@(tabEntityList)').datagrid('reload');
            }

        }, "JSON").error(function (result) {
        });
    }
</script>
